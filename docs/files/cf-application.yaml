AWSTemplateFormatVersion: 2010-09-09
Description: 'CloudFormation Application stack'

Parameters: 
  InstanceTypeParameter: 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - m5.large
    Description: Enter t2.micro or m5.large. Default is t2.micro.
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  DBHost:
    Description: The database URL which was used as the out of the cf-database stack
    MinLength: '1'
    Type: String
  DBName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: isen
    Description: The Isen database name
    MaxLength: '64'
    MinLength: '1'
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The Isen database admin account password
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DBUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Description: The ISEN database admin account username
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
Mappings: 
  RegionMap: 
    us-east-1: 
      "HVM64": "ami-00b882ac5193044e4"
    eu-west-1: 
      "HVM64": "ami-0f62aafc6efe8fd7b"

Resources: 

  Application: 
    Type: "AWS::EC2::Instance"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          application_install:
          - install_cfn
          - install_application
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack= ${AWS::StackId}
                region=${AWS::Region}
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Application.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Application --configsets application_install --url https://stackbuilder.amazonaws.com
              group: root
              mode: '000400'
              owner: root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        install_application:
          sources: 
            /usr/local/bin/crud-app: "https://cloud-migration-artifacts.s3.amazonaws.com/crud-app.tar.gz"
          files:
            /etc/systemd/system/crud-app.service:
              content: !Sub |
                [Unit]
                Description=CRUD App Service
                After=network.target
                StartLimitIntervalSec=0
                [Service]
                Type=simple
                Restart=always
                RestartSec=1
                User=root
                WorkingDirectory=/usr/local/bin/crud-app
                ExecStart=/usr/local/bin/crud-app/crud-app --dbHost ${DBHost} --dbName ${DBName} --dbUser ${DBUser} --dbPass ${DBPassword}
                [Install]
                WantedBy=multi-user.target
              group: root
              mode: '000664'
              owner: root
          commmands:
            enable_service:
              command: systemctl enable crud-app
            start_service:
              command: systemctl start crud-app
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !Ref InstanceTypeParameter
      KeyName:
        Ref: KeyName
      SecurityGroups:
      - Ref: ApplicationSecurityGroup
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           yum update -y aws-cfn-bootstrap
           /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource Application --configsets application_install --region ${AWS::Region}
           /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource Application --region ${AWS::Region}

  ApplicationSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable SSH and MySQL access"
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '8080'
        IpProtocol: tcp
        ToPort: '8080'
      - CidrIp: 0.0.0.0/0 #Attention!! Don't do this in real life!!
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
Outputs:
  InstanceID:
    Description: "The Instance ID"
    Value: !Ref Application
  PublicIP:
    Description: EC2 public IP
    Value: !GetAtt Application.PublicIp
